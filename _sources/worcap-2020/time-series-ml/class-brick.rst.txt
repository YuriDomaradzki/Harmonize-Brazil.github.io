..
    This file is part of Brazil Data Cube Documentation.
    Copyright 2020 INPE.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.


.. _time-series-ml-class-brick:

Classificação de bricks e geração de mapas
++++++++++++++++++++++++++++++++++++++++++


Prática com R Notebook
**********************


.. figure:: ../../img/worcap-2020/time-series-ml/class-brick/sits-postproc.png
  :alt: sits bricks classification
  :width: 280
  :figclass: align-right
  :name: time-series-ml:class-brick:sits-postproc


Neste *hands-on*, organizamos uma atividade prática no ``sits`` de acordo com o fluxograma apresentado ao lado. Nele, mostramos como é realizado a classificação de bricks e geração de mapas no ``sits``. Aqui você aprenderá a:

- acessar e classificar *bricks* locais.

- gerar mapas a partir de *bricks* de probabilidades.

- visualizar mapas gerados.


Notebook Kaggle: https://www.kaggle.com/rolfsimoes/sits-kaggle


Referências a Cubos de Dados
****************************


Um cubo de dados de observação da terra pode ser representado de várias formas.
Eles podem fornecer séries temporais que geralmente são geradas por um processo de organização sistemática de imagens de um determinado sensor/satélite. Essa organização realiza as correções e os ajustes necessários para que os pixels correspondentes de imagens de diferentes datas se refiram a um mesmo local geográfico.


No ``sits``, a função que faz referência a uma fonte de séries temporais é a função ``sits_cube()``. O que essa função faz é retornar uma tabela de metadados que descreva um cubo de dados, seja um *brick* ou um serviço Web como o WTSS. Vimos em exemplos anteriores como usar o WTSS para acessar séries temporais. Aqui, mostraremos ainda como acessar outro serviço de séries temporais, o SATVeg.


.. note::

    Em breve, o pacote ``sits`` poderá fazer referências aos cubos do Projeto *Brazil Data Cube*.


Exemplo acesso serviço SATVeg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


O SATVeg é um serviço de séries temporais desenvolvido pela Embrapa Informática Agropecuária. Atualmente o serviço fornece séries temporais dos produtos MOD13Q1 e MYD13Q1 do sensor MODIS. O acesso pode ser realizado como mostrado no exemplo a seguir:


.. code-block:: R
    :caption: Acesso ao serviço SATVeg da Embrapa.
    :linenos:

    # Cria referências para diferentes bases de séries temporais
    terra <- sits_cube(type = "SATVEG", name = "terra")
    aqua <- sits_cube(type = "SATVEG", name = "aqua")
    combined <- sits_cube(type = "SATVEG", name = "comb")

    # recupera o mesmo ponto dos três cubos de dados
    ts1 <- sits_get_data(terra,
                         longitude = -55.50563, latitude = -11.71557)
    ts1 <- sits_get_data(aqua,
                         longitude = -55.50563, latitude = -11.71557)
    ts1 <- sits_get_data(combined,
                         longitude = -55.50563, latitude = -11.71557)

    # Mostra as séries temporais de cada ponto
    plot(ts1)
    plot(ts2)
    plot(ts2)


Tanto o WTSS quanto o SATVEG são úteis para coletar séries temporais de pontos esparsos. Entretanto, devido a natureza desses serviços, não são adequados para gerar mapas de uso e cobertura. Uma possível solução para gerar mapas de uso e cobertura da terra é o uso de *bricks*.


Exemplo acesso/classificação de *brick* local
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Quando se quer gerar um mapa de uma área de estudo relativamente pequena, que não imponha entraves para o gerenciamento dos arquivos e da memória, os *bricks* tornam-se uma solução interessante. Um *brick* consiste em um arquivo no formato GeoTIF cujas bandas ou camadas se referem a diferentes instâncias no tempo. Por exemplo, um *brick* de NDVI do produto MOD13Q1 (MODIS), com 23 observações ao longo do ano de 2014 e compreendendo a região do município de Sinop-MT é armazenado em um único arquivo. Suas 23 observações ao longo do ano são organizadas como bandas do arquivo GeoTIF.


Como não existe um padrão definido para gravar metadados em arquivos GeoTIF, geralmete algumas informações extras precisam ser forncedidas pelo usuário, tais como valores mínimo e máximo teóricos, fator de escala do dado, etc.
Além disso, os bricks precisam de um arquivo texto que indique as datas correspondentes às suas camadas. Com essas informações, é possível acessar um *brick* a partir do ``sits`` e gerar mapas de uso e cobertura da terra.


No ambiente do Kaggle, disponibilizamos dois *bricks* sobre o município de Sinop-MT, um com os valores de NDVI e o outro com os de EVI, ambos do mesmo ano-calendário. O código a seguir cria a referência para esses bricks:


.. code-block:: R
    :caption: Acesso aos bricks de Sinop-MT.
    :linenos:

    # Carrega timeline do arquivo
    timeline <- readLines("../input/sits-dataset/timeline.txt")

    # Informa o caminho dos arquivos GeoTIF
    files <- c("../input/sits-dataset/NDVI.tif",
               "../input/sits-dataset/EVI.tif")

    # Cria a referência para os bricks de Sinop-MT
    sinop <- sits_cube(type = "BRICK",
                       name = "sinop-mt",
                       satellite = "TERRA",
                       sensor = "MODIS",
                       timeline = timeline,
                       bands = c("ndvi", "evi"),
                       files = files)


Como nos exemplos anteriores, este cubo provê acesso às séries temporais usando a função ``sits_get_data()``. No entanto, diferentemente dos outros cubos, este pode ser usado com a função ``sits_classify()`` para ser classificado e gerar um mapa de probabilidades de classes com a mesma extensão espacial.


.. code-block:: R
    :caption: Classificação dos bricks de Sinop-MT.
    :linenos:

    # Cria um novo conjunto de amostras apenas com as bandas 'ndvi' e 'evi'
    samples_2bands <- sits_select(samples, bands = sits_bands(sinop))

    # Treina um modelo RF com 200 árvores
    rf3 <- sits_train(samples_2bands, ml_method = sits_rfor(num_trees = 200))

    # Classifica o cubo `sinop`
    probs <- sits_classify(sinop, ml_model = rf3)

    # Mostra os mapas de probabilidades
    plot(probs)


A última etapa para gerar um mapa de uso e cobertura da terra é converter as probabilidades em classes discretas. A estratégia mais simples é escolher a classe com a maior probabilidade usando a função ``sits_label_classification()``. Esta função permite também gerar mapas espacialmente suavizados a partir de várias estratégias.


.. code-block:: R
    :caption: Mapa de uso e cobertura da terra de Sinop-MT.
    :linenos:

    # Gera mapa de uso e cobertura da terra
    maps <- sits_label_classification(probs)

    # Mostra mapa de uso e cobertura da terra
    plot(maps)


.. figure:: ../../img/worcap-2020/time-series-ml/class-brick/sinop-lulc.png
    :alt: sinop 2014 land use land cover map
    :width: 580
    :figclass: align-center
    :name: time-series-ml:class-brick:sinop-lulc